/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type FirewallDomainListObservation struct {
	Arn *string `json:"arn,omitempty" tf:"arn,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	TagsAll map[string]*string `json:"tagsAll,omitempty" tf:"tags_all,omitempty"`
}

type FirewallDomainListParameters struct {

	// +kubebuilder:validation:Optional
	Domains []*string `json:"domains,omitempty" tf:"domains,omitempty"`

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +terrajet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	Region *string `json:"region" tf:"-"`

	// +kubebuilder:validation:Optional
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

// FirewallDomainListSpec defines the desired state of FirewallDomainList
type FirewallDomainListSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     FirewallDomainListParameters `json:"forProvider"`
}

// FirewallDomainListStatus defines the observed state of FirewallDomainList.
type FirewallDomainListStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        FirewallDomainListObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// FirewallDomainList is the Schema for the FirewallDomainLists API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type FirewallDomainList struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              FirewallDomainListSpec   `json:"spec"`
	Status            FirewallDomainListStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// FirewallDomainListList contains a list of FirewallDomainLists
type FirewallDomainListList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []FirewallDomainList `json:"items"`
}

// Repository type metadata.
var (
	FirewallDomainList_Kind             = "FirewallDomainList"
	FirewallDomainList_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: FirewallDomainList_Kind}.String()
	FirewallDomainList_KindAPIVersion   = FirewallDomainList_Kind + "." + CRDGroupVersion.String()
	FirewallDomainList_GroupVersionKind = CRDGroupVersion.WithKind(FirewallDomainList_Kind)
)

func init() {
	SchemeBuilder.Register(&FirewallDomainList{}, &FirewallDomainListList{})
}
