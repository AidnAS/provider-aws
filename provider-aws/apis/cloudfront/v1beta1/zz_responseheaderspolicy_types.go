/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AccessControlAllowHeadersObservation struct {
}

type AccessControlAllowHeadersParameters struct {

	// +kubebuilder:validation:Optional
	Items []*string `json:"items,omitempty" tf:"items,omitempty"`
}

type AccessControlAllowMethodsObservation struct {
}

type AccessControlAllowMethodsParameters struct {

	// +kubebuilder:validation:Optional
	Items []*string `json:"items,omitempty" tf:"items,omitempty"`
}

type AccessControlAllowOriginsObservation struct {
}

type AccessControlAllowOriginsParameters struct {

	// +kubebuilder:validation:Optional
	Items []*string `json:"items,omitempty" tf:"items,omitempty"`
}

type AccessControlExposeHeadersObservation struct {
}

type AccessControlExposeHeadersParameters struct {

	// +kubebuilder:validation:Optional
	Items []*string `json:"items,omitempty" tf:"items,omitempty"`
}

type ContentSecurityPolicyObservation struct {
}

type ContentSecurityPolicyParameters struct {

	// +kubebuilder:validation:Required
	ContentSecurityPolicy *string `json:"contentSecurityPolicy" tf:"content_security_policy,omitempty"`

	// +kubebuilder:validation:Required
	Override *bool `json:"override" tf:"override,omitempty"`
}

type ContentTypeOptionsObservation struct {
}

type ContentTypeOptionsParameters struct {

	// +kubebuilder:validation:Required
	Override *bool `json:"override" tf:"override,omitempty"`
}

type CorsConfigObservation struct {
}

type CorsConfigParameters struct {

	// +kubebuilder:validation:Required
	AccessControlAllowCredentials *bool `json:"accessControlAllowCredentials" tf:"access_control_allow_credentials,omitempty"`

	// +kubebuilder:validation:Required
	AccessControlAllowHeaders []AccessControlAllowHeadersParameters `json:"accessControlAllowHeaders" tf:"access_control_allow_headers,omitempty"`

	// +kubebuilder:validation:Required
	AccessControlAllowMethods []AccessControlAllowMethodsParameters `json:"accessControlAllowMethods" tf:"access_control_allow_methods,omitempty"`

	// +kubebuilder:validation:Required
	AccessControlAllowOrigins []AccessControlAllowOriginsParameters `json:"accessControlAllowOrigins" tf:"access_control_allow_origins,omitempty"`

	// +kubebuilder:validation:Optional
	AccessControlExposeHeaders []AccessControlExposeHeadersParameters `json:"accessControlExposeHeaders,omitempty" tf:"access_control_expose_headers,omitempty"`

	// +kubebuilder:validation:Optional
	AccessControlMaxAgeSec *float64 `json:"accessControlMaxAgeSec,omitempty" tf:"access_control_max_age_sec,omitempty"`

	// +kubebuilder:validation:Required
	OriginOverride *bool `json:"originOverride" tf:"origin_override,omitempty"`
}

type CustomHeadersConfigItemsObservation struct {
}

type CustomHeadersConfigItemsParameters struct {

	// +kubebuilder:validation:Required
	Header *string `json:"header" tf:"header,omitempty"`

	// +kubebuilder:validation:Required
	Override *bool `json:"override" tf:"override,omitempty"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

type CustomHeadersConfigObservation struct {
}

type CustomHeadersConfigParameters struct {

	// +kubebuilder:validation:Optional
	Items []CustomHeadersConfigItemsParameters `json:"items,omitempty" tf:"items,omitempty"`
}

type FrameOptionsObservation struct {
}

type FrameOptionsParameters struct {

	// +kubebuilder:validation:Required
	FrameOption *string `json:"frameOption" tf:"frame_option,omitempty"`

	// +kubebuilder:validation:Required
	Override *bool `json:"override" tf:"override,omitempty"`
}

type ReferrerPolicyObservation struct {
}

type ReferrerPolicyParameters struct {

	// +kubebuilder:validation:Required
	Override *bool `json:"override" tf:"override,omitempty"`

	// +kubebuilder:validation:Required
	ReferrerPolicy *string `json:"referrerPolicy" tf:"referrer_policy,omitempty"`
}

type ResponseHeadersPolicyObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type ResponseHeadersPolicyParameters struct {

	// +kubebuilder:validation:Optional
	Comment *string `json:"comment,omitempty" tf:"comment,omitempty"`

	// +kubebuilder:validation:Optional
	CorsConfig []CorsConfigParameters `json:"corsConfig,omitempty" tf:"cors_config,omitempty"`

	// +kubebuilder:validation:Optional
	CustomHeadersConfig []CustomHeadersConfigParameters `json:"customHeadersConfig,omitempty" tf:"custom_headers_config,omitempty"`

	// +kubebuilder:validation:Optional
	Etag *string `json:"etag,omitempty" tf:"etag,omitempty"`

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +terrajet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	Region *string `json:"region" tf:"-"`

	// +kubebuilder:validation:Optional
	SecurityHeadersConfig []SecurityHeadersConfigParameters `json:"securityHeadersConfig,omitempty" tf:"security_headers_config,omitempty"`
}

type SecurityHeadersConfigObservation struct {
}

type SecurityHeadersConfigParameters struct {

	// +kubebuilder:validation:Optional
	ContentSecurityPolicy []ContentSecurityPolicyParameters `json:"contentSecurityPolicy,omitempty" tf:"content_security_policy,omitempty"`

	// +kubebuilder:validation:Optional
	ContentTypeOptions []ContentTypeOptionsParameters `json:"contentTypeOptions,omitempty" tf:"content_type_options,omitempty"`

	// +kubebuilder:validation:Optional
	FrameOptions []FrameOptionsParameters `json:"frameOptions,omitempty" tf:"frame_options,omitempty"`

	// +kubebuilder:validation:Optional
	ReferrerPolicy []ReferrerPolicyParameters `json:"referrerPolicy,omitempty" tf:"referrer_policy,omitempty"`

	// +kubebuilder:validation:Optional
	StrictTransportSecurity []StrictTransportSecurityParameters `json:"strictTransportSecurity,omitempty" tf:"strict_transport_security,omitempty"`

	// +kubebuilder:validation:Optional
	XSSProtection []XSSProtectionParameters `json:"xssProtection,omitempty" tf:"xss_protection,omitempty"`
}

type StrictTransportSecurityObservation struct {
}

type StrictTransportSecurityParameters struct {

	// +kubebuilder:validation:Required
	AccessControlMaxAgeSec *float64 `json:"accessControlMaxAgeSec" tf:"access_control_max_age_sec,omitempty"`

	// +kubebuilder:validation:Optional
	IncludeSubdomains *bool `json:"includeSubdomains,omitempty" tf:"include_subdomains,omitempty"`

	// +kubebuilder:validation:Required
	Override *bool `json:"override" tf:"override,omitempty"`

	// +kubebuilder:validation:Optional
	Preload *bool `json:"preload,omitempty" tf:"preload,omitempty"`
}

type XSSProtectionObservation struct {
}

type XSSProtectionParameters struct {

	// +kubebuilder:validation:Optional
	ModeBlock *bool `json:"modeBlock,omitempty" tf:"mode_block,omitempty"`

	// +kubebuilder:validation:Required
	Override *bool `json:"override" tf:"override,omitempty"`

	// +kubebuilder:validation:Required
	Protection *bool `json:"protection" tf:"protection,omitempty"`

	// +kubebuilder:validation:Optional
	ReportURI *string `json:"reportUri,omitempty" tf:"report_uri,omitempty"`
}

// ResponseHeadersPolicySpec defines the desired state of ResponseHeadersPolicy
type ResponseHeadersPolicySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ResponseHeadersPolicyParameters `json:"forProvider"`
}

// ResponseHeadersPolicyStatus defines the observed state of ResponseHeadersPolicy.
type ResponseHeadersPolicyStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ResponseHeadersPolicyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ResponseHeadersPolicy is the Schema for the ResponseHeadersPolicys API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type ResponseHeadersPolicy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ResponseHeadersPolicySpec   `json:"spec"`
	Status            ResponseHeadersPolicyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ResponseHeadersPolicyList contains a list of ResponseHeadersPolicys
type ResponseHeadersPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ResponseHeadersPolicy `json:"items"`
}

// Repository type metadata.
var (
	ResponseHeadersPolicy_Kind             = "ResponseHeadersPolicy"
	ResponseHeadersPolicy_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ResponseHeadersPolicy_Kind}.String()
	ResponseHeadersPolicy_KindAPIVersion   = ResponseHeadersPolicy_Kind + "." + CRDGroupVersion.String()
	ResponseHeadersPolicy_GroupVersionKind = CRDGroupVersion.WithKind(ResponseHeadersPolicy_Kind)
)

func init() {
	SchemeBuilder.Register(&ResponseHeadersPolicy{}, &ResponseHeadersPolicyList{})
}
