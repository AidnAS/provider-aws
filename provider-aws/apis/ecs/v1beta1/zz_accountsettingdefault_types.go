/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AccountSettingDefaultObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	PrincipalArn *string `json:"principalArn,omitempty" tf:"principal_arn,omitempty"`
}

type AccountSettingDefaultParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +terrajet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	Region *string `json:"region" tf:"-"`

	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

// AccountSettingDefaultSpec defines the desired state of AccountSettingDefault
type AccountSettingDefaultSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AccountSettingDefaultParameters `json:"forProvider"`
}

// AccountSettingDefaultStatus defines the observed state of AccountSettingDefault.
type AccountSettingDefaultStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AccountSettingDefaultObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// AccountSettingDefault is the Schema for the AccountSettingDefaults API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type AccountSettingDefault struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AccountSettingDefaultSpec   `json:"spec"`
	Status            AccountSettingDefaultStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AccountSettingDefaultList contains a list of AccountSettingDefaults
type AccountSettingDefaultList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AccountSettingDefault `json:"items"`
}

// Repository type metadata.
var (
	AccountSettingDefault_Kind             = "AccountSettingDefault"
	AccountSettingDefault_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AccountSettingDefault_Kind}.String()
	AccountSettingDefault_KindAPIVersion   = AccountSettingDefault_Kind + "." + CRDGroupVersion.String()
	AccountSettingDefault_GroupVersionKind = CRDGroupVersion.WithKind(AccountSettingDefault_Kind)
)

func init() {
	SchemeBuilder.Register(&AccountSettingDefault{}, &AccountSettingDefaultList{})
}
