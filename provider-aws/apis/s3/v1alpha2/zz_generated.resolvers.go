/*
Copyright 2022 Upbound Inc.
*/
// Code generated by angryjet. DO NOT EDIT.

package v1alpha2

import (
	"context"
	reference "github.com/crossplane/crossplane-runtime/pkg/reference"
	errors "github.com/pkg/errors"
	v1alpha2 "github.com/upbound/official-providers/provider-aws/apis/kms/v1alpha2"
	common "github.com/upbound/official-providers/provider-aws/config/common"
	client "sigs.k8s.io/controller-runtime/pkg/client"
)

// ResolveReferences of this Bucket.
func (mg *Bucket) ResolveReferences(ctx context.Context, c client.Reader) error {
	r := reference.NewAPIResolver(c, mg)

	var rsp reference.ResolutionResponse
	var err error

	for i3 := 0; i3 < len(mg.Spec.ForProvider.ServerSideEncryptionConfiguration); i3++ {
		for i4 := 0; i4 < len(mg.Spec.ForProvider.ServerSideEncryptionConfiguration[i3].Rule); i4++ {
			for i5 := 0; i5 < len(mg.Spec.ForProvider.ServerSideEncryptionConfiguration[i3].Rule[i4].ApplyServerSideEncryptionByDefault); i5++ {
				rsp, err = r.Resolve(ctx, reference.ResolutionRequest{
					CurrentValue: reference.FromPtrValue(mg.Spec.ForProvider.ServerSideEncryptionConfiguration[i3].Rule[i4].ApplyServerSideEncryptionByDefault[i5].KMSMasterKeyID),
					Extract:      common.ARNExtractor(),
					Reference:    mg.Spec.ForProvider.ServerSideEncryptionConfiguration[i3].Rule[i4].ApplyServerSideEncryptionByDefault[i5].KMSMasterKeyIDRef,
					Selector:     mg.Spec.ForProvider.ServerSideEncryptionConfiguration[i3].Rule[i4].ApplyServerSideEncryptionByDefault[i5].KMSMasterKeyIDSelector,
					To: reference.To{
						List:    &v1alpha2.KeyList{},
						Managed: &v1alpha2.Key{},
					},
				})
				if err != nil {
					return errors.Wrap(err, "mg.Spec.ForProvider.ServerSideEncryptionConfiguration[i3].Rule[i4].ApplyServerSideEncryptionByDefault[i5].KMSMasterKeyID")
				}
				mg.Spec.ForProvider.ServerSideEncryptionConfiguration[i3].Rule[i4].ApplyServerSideEncryptionByDefault[i5].KMSMasterKeyID = reference.ToPtrValue(rsp.ResolvedValue)
				mg.Spec.ForProvider.ServerSideEncryptionConfiguration[i3].Rule[i4].ApplyServerSideEncryptionByDefault[i5].KMSMasterKeyIDRef = rsp.ResolvedReference

			}
		}
	}

	return nil
}
