/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

// Package apis contains Kubernetes API for the provider.
package apis

import (
	"k8s.io/apimachinery/pkg/runtime"

	v1beta1 "github.com/upbound/official-providers/provider-aws/apis/autoscaling/v1beta1"
	v1beta1ec2 "github.com/upbound/official-providers/provider-aws/apis/ec2/v1beta1"
	v1alpha2 "github.com/upbound/official-providers/provider-aws/apis/ecr/v1alpha2"
	v1alpha2ecrpublic "github.com/upbound/official-providers/provider-aws/apis/ecrpublic/v1alpha2"
	v1alpha2ecs "github.com/upbound/official-providers/provider-aws/apis/ecs/v1alpha2"
	v1alpha2eks "github.com/upbound/official-providers/provider-aws/apis/eks/v1alpha2"
	v1alpha2elasticache "github.com/upbound/official-providers/provider-aws/apis/elasticache/v1alpha2"
	v1alpha2elbv2 "github.com/upbound/official-providers/provider-aws/apis/elbv2/v1alpha2"
	v1alpha2globalaccelerator "github.com/upbound/official-providers/provider-aws/apis/globalaccelerator/v1alpha2"
	v1alpha2iam "github.com/upbound/official-providers/provider-aws/apis/iam/v1alpha2"
	v1alpha2kms "github.com/upbound/official-providers/provider-aws/apis/kms/v1alpha2"
	v1alpha2mq "github.com/upbound/official-providers/provider-aws/apis/mq/v1alpha2"
	v1alpha2neptune "github.com/upbound/official-providers/provider-aws/apis/neptune/v1alpha2"
	v1alpha2rds "github.com/upbound/official-providers/provider-aws/apis/rds/v1alpha2"
	v1alpha1 "github.com/upbound/official-providers/provider-aws/apis/route53/v1alpha1"
	v1alpha2route53 "github.com/upbound/official-providers/provider-aws/apis/route53/v1alpha2"
	v1alpha1route53resolver "github.com/upbound/official-providers/provider-aws/apis/route53resolver/v1alpha1"
	v1alpha2s3 "github.com/upbound/official-providers/provider-aws/apis/s3/v1alpha2"
	v1alpha1apis "github.com/upbound/official-providers/provider-aws/apis/v1alpha1"
)

func init() {
	// Register the types with the Scheme so the components can map objects to GroupVersionKinds and back
	AddToSchemes = append(AddToSchemes,
		v1beta1.SchemeBuilder.AddToScheme,
		v1beta1ec2.SchemeBuilder.AddToScheme,
		v1alpha2.SchemeBuilder.AddToScheme,
		v1alpha2ecrpublic.SchemeBuilder.AddToScheme,
		v1alpha2ecs.SchemeBuilder.AddToScheme,
		v1alpha2eks.SchemeBuilder.AddToScheme,
		v1alpha2elasticache.SchemeBuilder.AddToScheme,
		v1alpha2elbv2.SchemeBuilder.AddToScheme,
		v1alpha2globalaccelerator.SchemeBuilder.AddToScheme,
		v1alpha2iam.SchemeBuilder.AddToScheme,
		v1alpha2kms.SchemeBuilder.AddToScheme,
		v1alpha2mq.SchemeBuilder.AddToScheme,
		v1alpha2neptune.SchemeBuilder.AddToScheme,
		v1alpha2rds.SchemeBuilder.AddToScheme,
		v1alpha1.SchemeBuilder.AddToScheme,
		v1alpha2route53.SchemeBuilder.AddToScheme,
		v1alpha1route53resolver.SchemeBuilder.AddToScheme,
		v1alpha2s3.SchemeBuilder.AddToScheme,
		v1alpha1apis.SchemeBuilder.AddToScheme,
	)
}

// AddToSchemes may be used to add all resources defined in the project to a Scheme
var AddToSchemes runtime.SchemeBuilder

// AddToScheme adds all Resources to the Scheme
func AddToScheme(s *runtime.Scheme) error {
	return AddToSchemes.AddToScheme(s)
}
