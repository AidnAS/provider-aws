/*
Copyright 2022 Upbound Inc.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type TrafficPolicyInstanceObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type TrafficPolicyInstanceParameters struct {

	// +kubebuilder:validation:Required
	HostedZoneID *string `json:"hostedZoneId" tf:"hosted_zone_id,omitempty"`

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +terrajet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	Region *string `json:"region" tf:"-"`

	// +kubebuilder:validation:Required
	TTL *float64 `json:"ttl" tf:"ttl,omitempty"`

	// +kubebuilder:validation:Required
	TrafficPolicyID *string `json:"trafficPolicyId" tf:"traffic_policy_id,omitempty"`

	// +kubebuilder:validation:Required
	TrafficPolicyVersion *float64 `json:"trafficPolicyVersion" tf:"traffic_policy_version,omitempty"`
}

// TrafficPolicyInstanceSpec defines the desired state of TrafficPolicyInstance
type TrafficPolicyInstanceSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     TrafficPolicyInstanceParameters `json:"forProvider"`
}

// TrafficPolicyInstanceStatus defines the observed state of TrafficPolicyInstance.
type TrafficPolicyInstanceStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        TrafficPolicyInstanceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// TrafficPolicyInstance is the Schema for the TrafficPolicyInstances API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type TrafficPolicyInstance struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              TrafficPolicyInstanceSpec   `json:"spec"`
	Status            TrafficPolicyInstanceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// TrafficPolicyInstanceList contains a list of TrafficPolicyInstances
type TrafficPolicyInstanceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []TrafficPolicyInstance `json:"items"`
}

// Repository type metadata.
var (
	TrafficPolicyInstance_Kind             = "TrafficPolicyInstance"
	TrafficPolicyInstance_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: TrafficPolicyInstance_Kind}.String()
	TrafficPolicyInstance_KindAPIVersion   = TrafficPolicyInstance_Kind + "." + CRDGroupVersion.String()
	TrafficPolicyInstance_GroupVersionKind = CRDGroupVersion.WithKind(TrafficPolicyInstance_Kind)
)

func init() {
	SchemeBuilder.Register(&TrafficPolicyInstance{}, &TrafficPolicyInstanceList{})
}
