apiVersion: autoscaling.aws.upbound.io/v1beta1
kind: AutoscalingGroup
metadata:
  labels:
    testing.upbound.io/example-name: bar
  name: bar
spec:
  forProvider:
    desiredCapacity: 4
    forceDelete: true
    healthCheckGracePeriod: 300
    healthCheckType: ELB
    initialLifecycleHook:
    - defaultResult: CONTINUE
      heartbeatTimeout: 2000
      lifecycleTransition: autoscaling:EC2_INSTANCE_LAUNCHING
      name: foobar
      notificationMetadata: |
        {
          "foo": "bar"
        }
      notificationTargetArn: arn:aws:sqs:{data.aws_region}}:${data.aws_account_id}:queue1*
      roleArn: arn:aws:iam::${data.aws_account_id}:role/S3Access
    launchConfiguration: ${aws_launch_configuration.foobar.name}
    maxSize: 5
    minSize: 2
    placementGroupSelector:
      matchLabels:
        testing.upbound.io/example-name: test
    region: us-west-1
    tag:
    - key: foo
      propagateAtLaunch: true
      value: bar
    - key: lorem
      propagateAtLaunch: false
      value: ipsum
    timeouts:
    - delete: 15m
    vpcZoneIdentifierRefs:
    - name: example1
    - name: example2

---

apiVersion: ec2.aws.upbound.io/v1beta1
kind: PlacementGroup
metadata:
  labels:
    testing.upbound.io/example-name: test
  name: test
spec:
  forProvider:
    region: us-west-1
    strategy: cluster


