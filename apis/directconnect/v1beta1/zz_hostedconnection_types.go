/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type HostedConnectionObservation struct {

	// The Direct Connect endpoint on which the physical connection terminates.
	AwsDevice *string `json:"awsDevice,omitempty" tf:"aws_device,omitempty"`

	// Indicates whether the connection supports a secondary BGP peer in the same address family (IPv4/IPv6).
	HasLogicalRedundancy *string `json:"hasLogicalRedundancy,omitempty" tf:"has_logical_redundancy,omitempty"`

	// The ID of the connection.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Boolean value representing if jumbo frames have been enabled for this connection.
	JumboFrameCapable *bool `json:"jumboFrameCapable,omitempty" tf:"jumbo_frame_capable,omitempty"`

	// The ID of the LAG.
	LagID *string `json:"lagId,omitempty" tf:"lag_id,omitempty"`

	// The time of the most recent call to DescribeLoa for this connection.
	LoaIssueTime *string `json:"loaIssueTime,omitempty" tf:"loa_issue_time,omitempty"`

	// The location of the connection.
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// The name of the AWS Direct Connect service provider associated with the connection.
	PartnerName *string `json:"partnerName,omitempty" tf:"partner_name,omitempty"`

	// The name of the service provider associated with the connection.
	ProviderName *string `json:"providerName,omitempty" tf:"provider_name,omitempty"`

	// The state of the connection. Possible values include: ordering, requested, pending, available, down, deleting, deleted, rejected, unknown. See AllocateHostedConnection for a description of each connection state.
	State *string `json:"state,omitempty" tf:"state,omitempty"`
}

type HostedConnectionParameters struct {

	// The bandwidth of the connection. Valid values for dedicated connections: 1Gbps, 10Gbps. Valid values for hosted connections: 50Mbps, 100Mbps, 200Mbps, 300Mbps, 400Mbps, 500Mbps, 1Gbps, 2Gbps, 5Gbps and 10Gbps. Case sensitive.
	// +kubebuilder:validation:Required
	Bandwidth *string `json:"bandwidth" tf:"bandwidth,omitempty"`

	// The ID of the interconnect or LAG.
	// +kubebuilder:validation:Required
	ConnectionID *string `json:"connectionId" tf:"connection_id,omitempty"`

	// The name of the connection.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// The ID of the AWS account of the customer for the connection.
	// +kubebuilder:validation:Required
	OwnerAccountID *string `json:"ownerAccountId" tf:"owner_account_id,omitempty"`

	// The AWS Region where the connection is located.
	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	Region *string `json:"region" tf:"-"`

	// The dedicated VLAN provisioned to the hosted connection.
	// +kubebuilder:validation:Required
	Vlan *float64 `json:"vlan" tf:"vlan,omitempty"`
}

// HostedConnectionSpec defines the desired state of HostedConnection
type HostedConnectionSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     HostedConnectionParameters `json:"forProvider"`
}

// HostedConnectionStatus defines the observed state of HostedConnection.
type HostedConnectionStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        HostedConnectionObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// HostedConnection is the Schema for the HostedConnections API. Provides a hosted connection on the specified interconnect or a link aggregation group (LAG) of interconnects. Intended for use by AWS Direct Connect Partners only.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type HostedConnection struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              HostedConnectionSpec   `json:"spec"`
	Status            HostedConnectionStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// HostedConnectionList contains a list of HostedConnections
type HostedConnectionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []HostedConnection `json:"items"`
}

// Repository type metadata.
var (
	HostedConnection_Kind             = "HostedConnection"
	HostedConnection_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: HostedConnection_Kind}.String()
	HostedConnection_KindAPIVersion   = HostedConnection_Kind + "." + CRDGroupVersion.String()
	HostedConnection_GroupVersionKind = CRDGroupVersion.WithKind(HostedConnection_Kind)
)

func init() {
	SchemeBuilder.Register(&HostedConnection{}, &HostedConnectionList{})
}
