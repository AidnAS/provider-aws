/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type JupyterServerAppSettingsDefaultResourceSpecObservation struct {
}

type JupyterServerAppSettingsDefaultResourceSpecParameters struct {

	// The instance type.
	// +kubebuilder:validation:Optional
	InstanceType *string `json:"instanceType,omitempty" tf:"instance_type,omitempty"`

	// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
	// +kubebuilder:validation:Optional
	LifecycleConfigArn *string `json:"lifecycleConfigArn,omitempty" tf:"lifecycle_config_arn,omitempty"`

	// The Amazon Resource Name (ARN) of the SageMaker image created on the instance.
	// +kubebuilder:validation:Optional
	SagemakerImageArn *string `json:"sagemakerImageArn,omitempty" tf:"sagemaker_image_arn,omitempty"`

	// The ARN of the image version created on the instance.
	// +kubebuilder:validation:Optional
	SagemakerImageVersionArn *string `json:"sagemakerImageVersionArn,omitempty" tf:"sagemaker_image_version_arn,omitempty"`
}

type KernelGatewayAppSettingsCustomImageObservation struct {
}

type KernelGatewayAppSettingsCustomImageParameters struct {

	// The name of the App Image Config.
	// +kubebuilder:validation:Required
	AppImageConfigName *string `json:"appImageConfigName" tf:"app_image_config_name,omitempty"`

	// The name of the Custom Image.
	// +kubebuilder:validation:Required
	ImageName *string `json:"imageName" tf:"image_name,omitempty"`

	// The version number of the Custom Image.
	// +kubebuilder:validation:Optional
	ImageVersionNumber *float64 `json:"imageVersionNumber,omitempty" tf:"image_version_number,omitempty"`
}

type UserProfileObservation struct {

	// The user profile Amazon Resource Name (ARN).
	Arn *string `json:"arn,omitempty" tf:"arn,omitempty"`

	// The ID of the user's profile in the Amazon Elastic File System (EFS) volume.
	HomeEFSFileSystemUID *string `json:"homeEfsFileSystemUid,omitempty" tf:"home_efs_file_system_uid,omitempty"`

	// The user profile Amazon Resource Name (ARN).
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	TagsAll map[string]*string `json:"tagsAll,omitempty" tf:"tags_all,omitempty"`
}

type UserProfileParameters struct {

	// The ID of the associated Domain.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/sagemaker/v1beta1.Domain
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	DomainID *string `json:"domainId,omitempty" tf:"domain_id,omitempty"`

	// Reference to a Domain in sagemaker to populate domainId.
	// +kubebuilder:validation:Optional
	DomainIDRef *v1.Reference `json:"domainIdRef,omitempty" tf:"-"`

	// Selector for a Domain in sagemaker to populate domainId.
	// +kubebuilder:validation:Optional
	DomainIDSelector *v1.Selector `json:"domainIdSelector,omitempty" tf:"-"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	Region *string `json:"region" tf:"-"`

	// A specifier for the type of value specified in single_sign_on_user_value. Currently, the only supported value is UserName. If the Domain's AuthMode is SSO, this field is required. If the Domain's AuthMode is not SSO, this field cannot be specified.
	// +kubebuilder:validation:Optional
	SingleSignOnUserIdentifier *string `json:"singleSignOnUserIdentifier,omitempty" tf:"single_sign_on_user_identifier,omitempty"`

	// The username of the associated AWS Single Sign-On User for this User Profile. If the Domain's AuthMode is SSO, this field is required, and must match a valid username of a user in your directory. If the Domain's AuthMode is not SSO, this field cannot be specified.
	// +kubebuilder:validation:Optional
	SingleSignOnUserValue *string `json:"singleSignOnUserValue,omitempty" tf:"single_sign_on_user_value,omitempty"`

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The name for the User Profile.
	// +kubebuilder:validation:Required
	UserProfileName *string `json:"userProfileName" tf:"user_profile_name,omitempty"`

	// The user settings. See User Settings below.
	// +kubebuilder:validation:Optional
	UserSettings []UserSettingsParameters `json:"userSettings,omitempty" tf:"user_settings,omitempty"`
}

type UserSettingsJupyterServerAppSettingsObservation struct {
}

type UserSettingsJupyterServerAppSettingsParameters struct {

	// The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. see Default Resource Spec below.
	// +kubebuilder:validation:Required
	DefaultResourceSpec []JupyterServerAppSettingsDefaultResourceSpecParameters `json:"defaultResourceSpec" tf:"default_resource_spec,omitempty"`

	// The Amazon Resource Name (ARN) of the Lifecycle Configurations.
	// +kubebuilder:validation:Optional
	LifecycleConfigArns []*string `json:"lifecycleConfigArns,omitempty" tf:"lifecycle_config_arns,omitempty"`
}

type UserSettingsKernelGatewayAppSettingsDefaultResourceSpecObservation struct {
}

type UserSettingsKernelGatewayAppSettingsDefaultResourceSpecParameters struct {

	// The instance type.
	// +kubebuilder:validation:Optional
	InstanceType *string `json:"instanceType,omitempty" tf:"instance_type,omitempty"`

	// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
	// +kubebuilder:validation:Optional
	LifecycleConfigArn *string `json:"lifecycleConfigArn,omitempty" tf:"lifecycle_config_arn,omitempty"`

	// The Amazon Resource Name (ARN) of the SageMaker image created on the instance.
	// +kubebuilder:validation:Optional
	SagemakerImageArn *string `json:"sagemakerImageArn,omitempty" tf:"sagemaker_image_arn,omitempty"`

	// The ARN of the image version created on the instance.
	// +kubebuilder:validation:Optional
	SagemakerImageVersionArn *string `json:"sagemakerImageVersionArn,omitempty" tf:"sagemaker_image_version_arn,omitempty"`
}

type UserSettingsKernelGatewayAppSettingsObservation struct {
}

type UserSettingsKernelGatewayAppSettingsParameters struct {

	// A list of custom SageMaker images that are configured to run as a KernelGateway app. see Custom Image below.
	// +kubebuilder:validation:Optional
	CustomImage []KernelGatewayAppSettingsCustomImageParameters `json:"customImage,omitempty" tf:"custom_image,omitempty"`

	// The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. see Default Resource Spec below.
	// +kubebuilder:validation:Required
	DefaultResourceSpec []UserSettingsKernelGatewayAppSettingsDefaultResourceSpecParameters `json:"defaultResourceSpec" tf:"default_resource_spec,omitempty"`

	// The Amazon Resource Name (ARN) of the Lifecycle Configurations.
	// +kubebuilder:validation:Optional
	LifecycleConfigArns []*string `json:"lifecycleConfigArns,omitempty" tf:"lifecycle_config_arns,omitempty"`
}

type UserSettingsObservation struct {
}

type UserSettingsParameters struct {

	// The execution role ARN for the user.
	// +kubebuilder:validation:Required
	ExecutionRole *string `json:"executionRole" tf:"execution_role,omitempty"`

	// The Jupyter server's app settings. See Jupyter Server App Settings below.
	// +kubebuilder:validation:Optional
	JupyterServerAppSettings []UserSettingsJupyterServerAppSettingsParameters `json:"jupyterServerAppSettings,omitempty" tf:"jupyter_server_app_settings,omitempty"`

	// The kernel gateway app settings. See Kernel Gateway App Settings below.
	// +kubebuilder:validation:Optional
	KernelGatewayAppSettings []UserSettingsKernelGatewayAppSettingsParameters `json:"kernelGatewayAppSettings,omitempty" tf:"kernel_gateway_app_settings,omitempty"`

	// The security groups.
	// +kubebuilder:validation:Optional
	SecurityGroups []*string `json:"securityGroups,omitempty" tf:"security_groups,omitempty"`

	// The sharing settings. See Sharing Settings below.
	// +kubebuilder:validation:Optional
	SharingSettings []UserSettingsSharingSettingsParameters `json:"sharingSettings,omitempty" tf:"sharing_settings,omitempty"`

	// The TensorBoard app settings. See TensorBoard App Settings below.
	// +kubebuilder:validation:Optional
	TensorBoardAppSettings []UserSettingsTensorBoardAppSettingsParameters `json:"tensorBoardAppSettings,omitempty" tf:"tensor_board_app_settings,omitempty"`
}

type UserSettingsSharingSettingsObservation struct {
}

type UserSettingsSharingSettingsParameters struct {

	// Whether to include the notebook cell output when sharing the notebook. The default is Disabled. Valid values are Allowed and Disabled.
	// +kubebuilder:validation:Optional
	NotebookOutputOption *string `json:"notebookOutputOption,omitempty" tf:"notebook_output_option,omitempty"`

	// When notebook_output_option is Allowed, the AWS Key Management Service (KMS) encryption key ID used to encrypt the notebook cell output in the Amazon S3 bucket.
	// +kubebuilder:validation:Optional
	S3KMSKeyID *string `json:"s3KmsKeyId,omitempty" tf:"s3_kms_key_id,omitempty"`

	// When notebook_output_option is Allowed, the Amazon S3 bucket used to save the notebook cell output.
	// +kubebuilder:validation:Optional
	S3OutputPath *string `json:"s3OutputPath,omitempty" tf:"s3_output_path,omitempty"`
}

type UserSettingsTensorBoardAppSettingsDefaultResourceSpecObservation struct {
}

type UserSettingsTensorBoardAppSettingsDefaultResourceSpecParameters struct {

	// The instance type.
	// +kubebuilder:validation:Optional
	InstanceType *string `json:"instanceType,omitempty" tf:"instance_type,omitempty"`

	// The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
	// +kubebuilder:validation:Optional
	LifecycleConfigArn *string `json:"lifecycleConfigArn,omitempty" tf:"lifecycle_config_arn,omitempty"`

	// The Amazon Resource Name (ARN) of the SageMaker image created on the instance.
	// +kubebuilder:validation:Optional
	SagemakerImageArn *string `json:"sagemakerImageArn,omitempty" tf:"sagemaker_image_arn,omitempty"`

	// The ARN of the image version created on the instance.
	// +kubebuilder:validation:Optional
	SagemakerImageVersionArn *string `json:"sagemakerImageVersionArn,omitempty" tf:"sagemaker_image_version_arn,omitempty"`
}

type UserSettingsTensorBoardAppSettingsObservation struct {
}

type UserSettingsTensorBoardAppSettingsParameters struct {

	// The default instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance. see Default Resource Spec below.
	// +kubebuilder:validation:Required
	DefaultResourceSpec []UserSettingsTensorBoardAppSettingsDefaultResourceSpecParameters `json:"defaultResourceSpec" tf:"default_resource_spec,omitempty"`
}

// UserProfileSpec defines the desired state of UserProfile
type UserProfileSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     UserProfileParameters `json:"forProvider"`
}

// UserProfileStatus defines the observed state of UserProfile.
type UserProfileStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        UserProfileObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// UserProfile is the Schema for the UserProfiles API. Provides a SageMaker User Profile resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type UserProfile struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              UserProfileSpec   `json:"spec"`
	Status            UserProfileStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// UserProfileList contains a list of UserProfiles
type UserProfileList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []UserProfile `json:"items"`
}

// Repository type metadata.
var (
	UserProfile_Kind             = "UserProfile"
	UserProfile_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: UserProfile_Kind}.String()
	UserProfile_KindAPIVersion   = UserProfile_Kind + "." + CRDGroupVersion.String()
	UserProfile_GroupVersionKind = CRDGroupVersion.WithKind(UserProfile_Kind)
)

func init() {
	SchemeBuilder.Register(&UserProfile{}, &UserProfileList{})
}
